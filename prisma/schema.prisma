// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
  output        = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(uuid())
  userName     String
  email        String      @unique
  profileImage String?
  createdAt    DateTime    @default(now())
  UserLiked    UserLiked[]
}

model Anime {
  id          String      @id @default(uuid())
  title       String
  description String
  coverImage  String
  category    String
  likeCount   Int         @default(0)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  Episode     Episode[]
  UserLiked   UserLiked[]
}

model Episode {
  id            String   @id @default(uuid())
  episodeNumber Int
  animeImage    String
  animeId       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  anime         Anime    @relation(fields: [animeId], references: [id], onDelete: Cascade)
}

model UserLiked {
  id      String @id @default(uuid())
  userId  String
  animeId String

  user  User  @relation(fields: [userId], references: [id])
  anime Anime @relation(fields: [animeId], references: [id])

  @@unique([userId, animeId])
}
